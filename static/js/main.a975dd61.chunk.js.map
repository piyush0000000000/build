{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","onClick","lightmode","darkmode","Form","_useState","useState","_useState2","Object","slicedToArray","text","newtext","htmlFor","onChange","event","console","log","target","value","split","rows","text2","toUpperCase","showalert","length","Alert","alert","concat","msg","data-dismiss","aria-hidden","App","setalert","document","backgroundColor","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a975dd61.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/link\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item dropdown\">\r\n        <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a className=\"dropdown-item\" href=\"/\">Action</a>\r\n          <a className=\"dropdown-item\" href=\"/\">Another action</a>\r\n          <div className=\"dropdown-divider\"></div>\r\n          <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n       <button type=\"button\" onClick={props.lightmode} className=\"btn btn-light\">Light</button>\r\n       <button type=\"button\" onClick={props.darkmode} className=\"btn btn-dark\">Dark</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes =  {\r\n  title : PropTypes.string\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function Form(props) {\r\n  \r\n    const [text,newtext] = useState(\"Enter text here\")\r\n    const handlechange = (event)=>{\r\n        console.log(\"onchange was clicked\")\r\n        newtext(event.target.value)\r\n        console.log(text.split(\" \"))\r\n    }\r\n    const handleclick = ()=>{\r\n        let text2 = text.toUpperCase()\r\n        newtext(text2)\r\n        props.showalert('success','Text was successfully converted to uppercase')\r\n\r\n    }\r\n  return (\r\n    <div>\r\n        <div className=\"form-group my-5\">\r\n           <label className='my-20 mx-3' htmlFor=\"exampleFormControlTextarea1\">Enter text to convert it to upperCase</label>\r\n           <textarea className=\"form-control my-20 mx-3 \" onChange={handlechange} value ={text} id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n           <button className=\"btn btn-primary my-4\" onClick={handleclick}>Covert to uppercase</button>\r\n           <div>{text.length} characters and {text.split(\" \").length} words</div>\r\n           \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n  return (\r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{props.alert.type}</strong> {props.alert.msg}\r\n      <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n</div>\r\n\r\n  )\r\n}\r\n","import React, { Component }  from 'react';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport Alert from './components/Alert';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const darkmode = ()=>{\n    document.backgroundColor = 'black'\n  }\n  const lightmode = ()=>{\n\n  }\n  const [alert,setalert] = useState(null)\n  const showalert = (type,message)=>{\n    setalert({\n      type : type,\n      msg : message\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Alert alert = {alert}></Alert>\n      <Navbar title=\"Navbar\" darkmode={darkmode} lightmode={lightmode} ></Navbar>\n      <Form showalert={showalert}></Form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}